Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    COS
    TAN
    LOG
    READ
    COSH
    SQRT
    EXP
    E
    LOG10
    GAMMA
    COMMENT
    ASIN
    ATAN
    TANH
    LOCAL
    SIN
    ERFC
    ACOS
    PI
    DOLLAR
    PHI
    SINH
    INT
    FLOAT
    ERF
    PREC
    DEG
    ABS

Grammar

Rule 0     S' -> list
Rule 1     list -> <empty>
Rule 2     list -> list
Rule 3     list -> list defn
Rule 4     list -> list asgn
Rule 5     list -> list stmt
Rule 6     list -> list expr
Rule 7     list -> list error
Rule 8     asgn -> ID ASSIGN expr
Rule 9     asgn -> ID ADDEQ expr
Rule 10    asgn -> ID SUBEQ expr
Rule 11    asgn -> ID MULEQ expr
Rule 12    asgn -> ID DIVEQ expr
Rule 13    asgn -> ID MODEQ expr
Rule 14    stmt -> expr
Rule 15    stmt -> RETURN
Rule 16    stmt -> RETURN expr
Rule 17    stmt -> PRINT prlist
Rule 18    stmt -> WHILE LPARENT cond RPARENT stmt END
Rule 19    stmt -> FOR LPARENT cond SEMICOLON cond SEMICOLON cond RPARENT stmt END
Rule 20    stmt -> IF LPARENT cond RPARENT stmt END
Rule 21    stmt -> IF LPARENT cond RPARENT stmt END ELSE stmt END
Rule 22    stmt -> LBRACKET stmtlist RBRACKET
Rule 23    cond -> expr
Rule 24    stmtlist -> <empty>
Rule 25    stmtlist -> stmtlist
Rule 26    stmtlist -> stmtlist stmt
Rule 27    expr -> NUMBER
Rule 28    expr -> ID
Rule 29    expr -> asgn
Rule 30    expr -> FUNCTION BEGIN
Rule 31    expr -> LPARENT ID RPARENT
Rule 32    expr -> ID LPARENT expr RPARENT
Rule 33    expr -> LPARENT expr RPARENT
Rule 34    expr -> expr PLUS expr
Rule 35    expr -> expr MINUS expr
Rule 36    expr -> expr TIMES expr
Rule 37    expr -> expr DIVIDE expr
Rule 38    expr -> expr MOD expr
Rule 39    expr -> MINUS expr
Rule 40    expr -> expr LT expr
Rule 41    expr -> expr GT expr
Rule 42    expr -> expr LE expr
Rule 43    expr -> expr GE expr
Rule 44    expr -> expr EQ expr
Rule 45    expr -> expr NE expr
Rule 46    expr -> expr OR expr
Rule 47    expr -> expr AND expr
Rule 48    expr -> expr NOT expr
Rule 49    expr -> INC ID
Rule 50    expr -> DEC ID
Rule 51    expr -> ID INC
Rule 52    expr -> ID DEC
Rule 53    prlist -> expr
Rule 54    prlist -> STRING
Rule 55    prlist -> prlist COMMA expr
Rule 56    prlist -> prlist COMMA STRING
Rule 57    defn -> FUNC procname
Rule 58    defn -> PROC procname
Rule 59    formals -> ID
Rule 60    formals -> ID COMMA formals
Rule 61    procname -> FUNCTION
Rule 62    procname -> ID
Rule 63    procname -> PROCEDURE
Rule 64    arglist -> <empty>
Rule 65    arglist -> expr
Rule 66    arglist -> arglist COMMA expr

Terminals, with rules where they appear

ABS                  : 
ACOS                 : 
ADDEQ                : 9
AND                  : 47
ASIN                 : 
ASSIGN               : 8
ATAN                 : 
BEGIN                : 30
COMMA                : 55 56 60 66
COMMENT              : 
COS                  : 
COSH                 : 
DEC                  : 50 52
DEG                  : 
DIVEQ                : 12
DIVIDE               : 37
DOLLAR               : 
E                    : 
ELSE                 : 21
END                  : 18 19 20 21 21
EQ                   : 44
ERF                  : 
ERFC                 : 
EXP                  : 
FLOAT                : 
FOR                  : 19
FUNC                 : 57
FUNCTION             : 30 61
GAMMA                : 
GE                   : 43
GT                   : 41
ID                   : 8 9 10 11 12 13 28 31 32 49 50 51 52 59 60 62
IF                   : 20 21
INC                  : 49 51
INT                  : 
LBRACKET             : 22
LE                   : 42
LOCAL                : 
LOG                  : 
LOG10                : 
LPARENT              : 18 19 20 21 31 32 33
LT                   : 40
MINUS                : 35 39
MOD                  : 38
MODEQ                : 13
MULEQ                : 11
NE                   : 45
NOT                  : 48
NUMBER               : 27
OR                   : 46
PHI                  : 
PI                   : 
PLUS                 : 34
PREC                 : 
PRINT                : 17
PROC                 : 58
PROCEDURE            : 63
RBRACKET             : 22
READ                 : 
RETURN               : 15 16
RPARENT              : 18 19 20 21 31 32 33
SEMICOLON            : 19 19
SIN                  : 
SINH                 : 
SQRT                 : 
STRING               : 54 56
SUBEQ                : 10
TAN                  : 
TANH                 : 
TIMES                : 36
WHILE                : 18
error                : 7

Nonterminals, with rules where they appear

arglist              : 66
asgn                 : 4 29
cond                 : 18 19 19 19 20 21
defn                 : 3
expr                 : 6 8 9 10 11 12 13 14 16 23 32 33 34 34 35 35 36 36 37 37 38 38 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 53 55 65 66
formals              : 60
list                 : 2 3 4 5 6 7 0
prlist               : 17 55 56
procname             : 57 58
stmt                 : 5 18 19 20 21 21 26
stmtlist             : 22 25 26

Parsing method: LALR

state 0

    (0) S' -> . list
    (1) list -> .
    (2) list -> . list
    (3) list -> . list defn
    (4) list -> . list asgn
    (5) list -> . list stmt
    (6) list -> . list expr
    (7) list -> . list error

    error           reduce using rule 1 (list -> .)
    FUNC            reduce using rule 1 (list -> .)
    PROC            reduce using rule 1 (list -> .)
    ID              reduce using rule 1 (list -> .)
    RETURN          reduce using rule 1 (list -> .)
    PRINT           reduce using rule 1 (list -> .)
    WHILE           reduce using rule 1 (list -> .)
    FOR             reduce using rule 1 (list -> .)
    IF              reduce using rule 1 (list -> .)
    LBRACKET        reduce using rule 1 (list -> .)
    NUMBER          reduce using rule 1 (list -> .)
    FUNCTION        reduce using rule 1 (list -> .)
    LPARENT         reduce using rule 1 (list -> .)
    MINUS           reduce using rule 1 (list -> .)
    INC             reduce using rule 1 (list -> .)
    DEC             reduce using rule 1 (list -> .)
    $end            reduce using rule 1 (list -> .)

    list                           shift and go to state 1

state 1

    (0) S' -> list .
    (2) list -> list .
    (3) list -> list . defn
    (4) list -> list . asgn
    (5) list -> list . stmt
    (6) list -> list . expr
    (7) list -> list . error
    (57) defn -> . FUNC procname
    (58) defn -> . PROC procname
    (8) asgn -> . ID ASSIGN expr
    (9) asgn -> . ID ADDEQ expr
    (10) asgn -> . ID SUBEQ expr
    (11) asgn -> . ID MULEQ expr
    (12) asgn -> . ID DIVEQ expr
    (13) asgn -> . ID MODEQ expr
    (14) stmt -> . expr
    (15) stmt -> . RETURN
    (16) stmt -> . RETURN expr
    (17) stmt -> . PRINT prlist
    (18) stmt -> . WHILE LPARENT cond RPARENT stmt END
    (19) stmt -> . FOR LPARENT cond SEMICOLON cond SEMICOLON cond RPARENT stmt END
    (20) stmt -> . IF LPARENT cond RPARENT stmt END
    (21) stmt -> . IF LPARENT cond RPARENT stmt END ELSE stmt END
    (22) stmt -> . LBRACKET stmtlist RBRACKET
    (27) expr -> . NUMBER
    (28) expr -> . ID
    (29) expr -> . asgn
    (30) expr -> . FUNCTION BEGIN
    (31) expr -> . LPARENT ID RPARENT
    (32) expr -> . ID LPARENT expr RPARENT
    (33) expr -> . LPARENT expr RPARENT
    (34) expr -> . expr PLUS expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr TIMES expr
    (37) expr -> . expr DIVIDE expr
    (38) expr -> . expr MOD expr
    (39) expr -> . MINUS expr
    (40) expr -> . expr LT expr
    (41) expr -> . expr GT expr
    (42) expr -> . expr LE expr
    (43) expr -> . expr GE expr
    (44) expr -> . expr EQ expr
    (45) expr -> . expr NE expr
    (46) expr -> . expr OR expr
    (47) expr -> . expr AND expr
    (48) expr -> . expr NOT expr
    (49) expr -> . INC ID
    (50) expr -> . DEC ID
    (51) expr -> . ID INC
    (52) expr -> . ID DEC

